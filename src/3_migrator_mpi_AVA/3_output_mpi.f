      SUBROUTINE OUTPUT(NRBLOCCHITR, MAXNRBLOCCHITR, DBRESTART, DBNR, NF,
     $    TG_TYPE, TG_NPAN, TG_NNA, TG_NNB, TGT_STR, NTR_MIG, OUTDIR, LENOUTDIR,
     $    PAN_SAVE, PAN_TOT, CONT_SAVE, CONT_R, PAN1, PAN2, PAN3, PAN4, PAN5,
     $    NTR_MIG_CICLO_RECV, PAN_PARZ_RECV, CONT_RPARZ_RECV,
     $    SS)

      IMPLICIT NONE

      INTEGER*4     MAXNRBLOCCHITR
      INTEGER*4     NRBLOCCHITR

      INTEGER*4     NF
      CHARACTER*3   MODE

      INTEGER*4     DBRESTART(MAXNRBLOCCHITR), DBNR

      INTEGER*4     TG_TYPE
      INTEGER*4     TG_NPAN
      INTEGER*4     TG_NNA(TG_NPAN),TG_NNB(TG_NPAN)

      CHARACTER*8   TGT_STR

      INTEGER*4     NTR_MIG
CCC 08/05/2002 MPI-
      integer*4     NTR_MIG_CICLO_RECV

      INTEGER*4     PAN1,PAN2,PAN3,PAN4,PAN5

      REAL*4        PAN_SAVE(PAN1*PAN2*PAN4*PAN5)
      REAL*4        PAN_TOT(PAN1,PAN2,PAN3,PAN4,PAN5)

      INTEGER*4     CONT_SAVE(PAN1*PAN2*PAN4*PAN5)
      INTEGER*4     CONT_R(PAN1,PAN2,PAN3,PAN4,PAN5)

CCC 08/05/2002 MPI- 
      real*4        PAN_PARZ_RECV(PAN1,PAN2,PAN3,PAN4,PAN5)
      integer*4     CONT_RPARZ_RECV(PAN1,PAN2,PAN3,PAN4,PAN5)

      CHARACTER*255 OUTDIR
      INTEGER*4     LENOUTDIR

      INTEGER*4     SS

      INTEGER*4     FIDIO

**********Variabili locali**********************************************

      INTEGER*4     FILE_ERROR
      CHARACTER*255 AUXSTR1

      INTEGER*4     IA, IB, IC, ID, IE
      INTEGER*4     SAVE_DIM, INDICE


           write(6,*)"ss",ss
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCC Inizializzazione
         FIDIO  = 0

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCC Aggiornamento matrici di output tramite riduzione

CCC 08/05/2002 MPI- punto aaaa)
         NTR_MIG = NTR_MIG + NTR_MIG_CICLO_RECV

CCC 08/05/2002 MPI- punto bbbb)
         IF (TG_TYPE .EQ. 2) THEN      ! ** TG_TYPE 2
            DO 119 IE=1,PAN5
              DO 129 ID=1,PAN4
                DO 139 IC=1,TG_NPAN
                  DO 149 IB=1,TG_NNB(IC)
                    DO 159 IA=1,TG_NNA(IC)
                       PAN_TOT(IA,IB,IC,ID,IE) = PAN_TOT(IA,IB,IC,ID,IE) + PAN_PARZ_RECV(IA,IB,IC,ID,IE)
                       CONT_R(IA,IB,IC,ID,IE)  = CONT_R(IA,IB,IC,ID,IE)  + CONT_RPARZ_RECV(IA,IB,IC,ID,IE)
 159                CONTINUE
 149              CONTINUE
 139            CONTINUE
 129          CONTINUE
 119        CONTINUE

         ELSE                          ! ** TG_TYPE 1 OR 3
          
            DO 11 IE=1,PAN5
              DO 12 ID=1,PAN4
                DO 13 IC=1,PAN3
                  DO 14 IB=1,PAN2
                    DO 15 IA=1,PAN1
                       PAN_TOT(IA,IB,IC,ID,IE) = PAN_TOT(IA,IB,IC,ID,IE) + PAN_PARZ_RECV(IA,IB,IC,ID,IE)
                       CONT_R(IA,IB,IC,ID,IE)  = CONT_R(IA,IB,IC,ID,IE)  + CONT_RPARZ_RECV(IA,IB,IC,ID,IE)
 15                 CONTINUE
 14               CONTINUE
 13             CONTINUE
 12           CONTINUE
 11         CONTINUE
         ENDIF

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCC Modalita' di accesso ai file

* ------ salvataggio dati su disco ---------------------------------------------

       WRITE(*,*) 'Scrittura su disco di risultati e dati di restart...'
       DBRESTART(SS)=1

       IF ( (SS .EQ. 1) .AND. (NF .EQ. 1) ) THEN

          MODE='w+b'

       ELSE

          MODE='r+b'

       ENDIF

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
* ------ salvataggio dati TG_TYPE=1

       IF (TG_TYPE .EQ. 1) THEN
           SAVE_DIM=PAN3*PAN4*PAN5

           AUXSTR1 = OUTDIR(1:LENOUTDIR)//'LISTr.H@'       !** prima copia
           CALL GLOB_FOPEN64(FIDIO,AUXSTR1,MODE,FILE_ERROR)
           CALL GLOB_FWRITE(FIDIO,PAN_TOT, 4, SAVE_DIM,FILE_ERROR)
           CALL GLOB_FCLOSE64(FIDIO,FILE_ERROR)

           AUXSTR1 = OUTDIR(1:LENOUTDIR)//'LISTfr.H@'
           CALL GLOB_FOPEN64(FIDIO,AUXSTR1,MODE,FILE_ERROR)
           CALL GLOB_FWRITE(FIDIO,CONT_R, 4, SAVE_DIM,FILE_ERROR)
           CALL GLOB_FCLOSE64(FIDIO,FILE_ERROR)

           AUXSTR1 = OUTDIR(1:LENOUTDIR)//'.RestartDB1'
           CALL GLOB_FOPEN(FIDIO,AUXSTR1,'r+b',FILE_ERROR)
           CALL GLOB_FWRITE(FIDIO,DBRESTART, 4,NRBLOCCHITR,FILE_ERROR)
           CALL GLOB_FCLOSE(FIDIO,FILE_ERROR)

           DBNR=1
           AUXSTR1 = OUTDIR(1:LENOUTDIR)//'.RestartDBnr'
           CALL GLOB_FOPEN(FIDIO,AUXSTR1,'r+b',FILE_ERROR)
           CALL GLOB_FWRITE(FIDIO,DBNR,4,1,FILE_ERROR)
           CALL GLOB_FCLOSE(FIDIO,FILE_ERROR)

           AUXSTR1 = OUTDIR(1:LENOUTDIR)//'.LISTr.H@'      !** seconda copia
           CALL GLOB_FOPEN64(FIDIO,AUXSTR1,MODE,FILE_ERROR)
           CALL GLOB_FWRITE(FIDIO,PAN_TOT, 4, SAVE_DIM,FILE_ERROR)
           CALL GLOB_FCLOSE64(FIDIO,FILE_ERROR)

           AUXSTR1 = OUTDIR(1:LENOUTDIR)//'.LISTfr.H@'
           CALL GLOB_FOPEN64(FIDIO,AUXSTR1,MODE,FILE_ERROR)
           CALL GLOB_FWRITE(FIDIO,CONT_R, 4, SAVE_DIM,FILE_ERROR)
           CALL GLOB_FCLOSE64(FIDIO,FILE_ERROR)

           AUXSTR1 = OUTDIR(1:LENOUTDIR)//'.RestartDB2'
           CALL GLOB_FOPEN(FIDIO,AUXSTR1,MODE,FILE_ERROR)
           CALL GLOB_FWRITE(FIDIO,DBRESTART, 4,NRBLOCCHITR,FILE_ERROR)
           CALL GLOB_FCLOSE(FIDIO,FILE_ERROR)

           DBNR=2
           AUXSTR1 = OUTDIR(1:LENOUTDIR)//'.RestartDBnr'
           CALL GLOB_FOPEN(FIDIO,AUXSTR1,MODE,FILE_ERROR)
           CALL GLOB_FWRITE(FIDIO,DBNR,4,1,FILE_ERROR)
           CALL GLOB_FCLOSE(FIDIO,FILE_ERROR)

       ENDIF

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
* ------ salvataggio dati TG_TYPE=2

       IF (TG_TYPE .EQ. 2) THEN

           DO 927 IC=1,TG_NPAN 

             WRITE(TGT_STR,"(I8)") IC+10000000

             SAVE_DIM=TG_NNB(IC)*TG_NNA(IC)*PAN4*PAN5
             DO 914 IE=1,PAN5
                DO 915 ID=1,PAN4
                   DO 916 IB=1,TG_NNB(IC)
                      DO 917 IA=1,TG_NNA(IC)
                         INDICE = IA+( (IB-1)+( (ID-1)+(IE-1)*PAN4 )*TG_NNB(IC) )*TG_NNA(IC)
                         PAN_SAVE(INDICE)  = PAN_TOT(IA,IB,IC,ID,IE)
                         CONT_SAVE(INDICE) = CONT_R(IA,IB,IC,ID,IE)
 917                  CONTINUE
 916               CONTINUE
 915            CONTINUE 
 914         CONTINUE
 
             AUXSTR1 = OUTDIR(1:LENOUTDIR)//'PAN'//TGT_STR//'r.H@'              !** prima copia
             CALL GLOB_FOPEN64(FIDIO ,AUXSTR1,MODE,FILE_ERROR)
             CALL GLOB_FWRITE(FIDIO ,PAN_SAVE , 4, SAVE_DIM,FILE_ERROR)
             CALL GLOB_FCLOSE64(FIDIO ,FILE_ERROR)

             AUXSTR1 = OUTDIR(1:LENOUTDIR)//'PAN'//TGT_STR//'fr.H@'
             CALL GLOB_FOPEN64(FIDIO,AUXSTR1,MODE,FILE_ERROR)
             CALL GLOB_FWRITE(FIDIO,CONT_SAVE, 4, SAVE_DIM,FILE_ERROR)
             CALL GLOB_FCLOSE64(FIDIO,FILE_ERROR)

             AUXSTR1 = OUTDIR(1:LENOUTDIR)//'.PAN'//TGT_STR//'r.H@'             !** seconda copia
             CALL GLOB_FOPEN64(FIDIO,AUXSTR1,MODE,FILE_ERROR)
             CALL GLOB_FWRITE(FIDIO,PAN_SAVE , 4, SAVE_DIM,FILE_ERROR)
             CALL GLOB_FCLOSE64(FIDIO,FILE_ERROR)

             AUXSTR1 = OUTDIR(1:LENOUTDIR)//'.PAN'//TGT_STR//'fr.H@'
             CALL GLOB_FOPEN64(FIDIO,AUXSTR1,MODE,FILE_ERROR)
             CALL GLOB_FWRITE(FIDIO,CONT_SAVE, 4, SAVE_DIM,FILE_ERROR)
             CALL GLOB_FCLOSE64(FIDIO,FILE_ERROR)

 927       CONTINUE

           AUXSTR1 = OUTDIR(1:LENOUTDIR)//'.RestartDB1'
           CALL GLOB_FOPEN(FIDIO,AUXSTR1,'r+b',FILE_ERROR)
           CALL GLOB_FWRITE(FIDIO,DBRESTART, 4,NRBLOCCHITR,FILE_ERROR)
           CALL GLOB_FCLOSE(FIDIO,FILE_ERROR)

           DBNR=1
           AUXSTR1 = OUTDIR(1:LENOUTDIR)//'.RestartDBnr'
           CALL GLOB_FOPEN(FIDIO,AUXSTR1,'r+b',FILE_ERROR)
           CALL GLOB_FWRITE(FIDIO,DBNR,4,1,FILE_ERROR)
           CALL GLOB_FCLOSE(FIDIO,FILE_ERROR)

           AUXSTR1 = OUTDIR(1:LENOUTDIR)//'.RestartDB2'
           CALL GLOB_FOPEN(FIDIO,AUXSTR1,MODE,FILE_ERROR)
           CALL GLOB_FWRITE(FIDIO,DBRESTART, 4,NRBLOCCHITR,FILE_ERROR)
           CALL GLOB_FCLOSE(FIDIO,FILE_ERROR)

           DBNR=2
           AUXSTR1 = OUTDIR(1:LENOUTDIR)//'.RestartDBnr'
           CALL GLOB_FOPEN(FIDIO,AUXSTR1,MODE,FILE_ERROR)
           CALL GLOB_FWRITE(FIDIO,DBNR,4,1,FILE_ERROR)
           CALL GLOB_FCLOSE(FIDIO,FILE_ERROR)

       ENDIF

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
* ------ salvataggio dati TG_TYPE=3

       IF (TG_TYPE .EQ. 3) THEN
            SAVE_DIM=PAN1*PAN2*PAN3*PAN4*PAN5

            AUXSTR1 = OUTDIR(1:LENOUTDIR)//'VOLUMEr.H@'        !** prima copia
            CALL GLOB_FOPEN64(FIDIO,AUXSTR1,MODE,FILE_ERROR)
            CALL GLOB_FWRITE(FIDIO,PAN_TOT, 4, SAVE_DIM,FILE_ERROR)
            CALL GLOB_FCLOSE64(FIDIO,FILE_ERROR)

            AUXSTR1 = OUTDIR(1:LENOUTDIR)//'VOLUMEfr.H@'
            CALL GLOB_FOPEN64(FIDIO,AUXSTR1,MODE,FILE_ERROR)
            CALL GLOB_FWRITE(FIDIO,CONT_R, 4, SAVE_DIM,FILE_ERROR)
            CALL GLOB_FCLOSE64(FIDIO,FILE_ERROR)

            AUXSTR1 = OUTDIR(1:LENOUTDIR)//'.RestartDB1'
            CALL GLOB_FOPEN(FIDIO,AUXSTR1,'r+b',FILE_ERROR)
            CALL GLOB_FWRITE(FIDIO,DBRESTART,4,NRBLOCCHITR,FILE_ERROR)
            CALL GLOB_FCLOSE(FIDIO,FILE_ERROR)

            DBNR=1
            AUXSTR1 = OUTDIR(1:LENOUTDIR)//'.RestartDBnr'
            CALL GLOB_FOPEN(FIDIO,AUXSTR1,'r+b',FILE_ERROR)
            CALL GLOB_FWRITE(FIDIO,DBNR,4,1,FILE_ERROR)
            CALL GLOB_FCLOSE(FIDIO,FILE_ERROR)


            AUXSTR1 = OUTDIR(1:LENOUTDIR)//'.VOLUMEr.H@'       !** seconda copia
            CALL GLOB_FOPEN64(FIDIO,AUXSTR1,MODE,FILE_ERROR)
            CALL GLOB_FWRITE(FIDIO,PAN_TOT, 4, SAVE_DIM,FILE_ERROR)
            CALL GLOB_FCLOSE64(FIDIO,FILE_ERROR)

            AUXSTR1 = OUTDIR(1:LENOUTDIR)//'.VOLUMEfr.H@'
            CALL GLOB_FOPEN64(FIDIO,AUXSTR1,MODE,FILE_ERROR)
            CALL GLOB_FWRITE(FIDIO,CONT_R, 4, SAVE_DIM,FILE_ERROR)
            CALL GLOB_FCLOSE64(FIDIO,FILE_ERROR)

            AUXSTR1 = OUTDIR(1:LENOUTDIR)//'.RestartDB2'
            CALL GLOB_FOPEN(FIDIO,AUXSTR1,MODE,FILE_ERROR)
            CALL GLOB_FWRITE(FIDIO,DBRESTART, 4,NRBLOCCHITR,FILE_ERROR)
            CALL GLOB_FCLOSE(FIDIO,FILE_ERROR)

            DBNR=2
            AUXSTR1 = OUTDIR(1:LENOUTDIR)//'.RestartDBnr'
            CALL GLOB_FOPEN(FIDIO,AUXSTR1,MODE,FILE_ERROR)
            CALL GLOB_FWRITE(FIDIO,DBNR,4,1,FILE_ERROR)
            CALL GLOB_FCLOSE(FIDIO,FILE_ERROR)

       ENDIF
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

       WRITE(*,*) ' ...end '

       END
